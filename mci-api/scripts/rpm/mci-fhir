#!/bin/bash
#
# mci-fhir        start/stop/status script
#
# chkconfig: - 64 36
# description: The mci-fhir shared health record system
# processname: mci-fhir
# config: /etc/default/mci-fhir
# pidfile: /var/run/mci-fhir/mci-fhir.pid
### BEGIN INIT INFO
# Provides: mci-fhir
# Required-Start: $local_fs $remote_fs $network $named $syslog $time
# Required-Stop: $local_fs $remote_fs $network $named $syslog $time
# Short-Description: start and stop mci-fhir system,
# Description: BDSHR system
### END INIT INFO

export MCI_USER=sharedhealth
export MCI_RUN=/opt/mci-fhir/bin/start.sh
export CUR_USER=`/usr/bin/whoami`

# load configuration
. /etc/default/mci-fhir

create_dirs() {
    if [[ ! -e /var/run/mci-fhir ]]; then
        ln -s /opt/mci-fhir/var /var/run/mci-fhir
    fi

    if [[ ! -e /var/log/mci-fhir ]]; then
        mkdir /var/log/mci-fhir
    fi
}
mci_fhir_pid() {
        echo `ps -fe | grep 'mci-fhir.war' | grep -v grep | tr -s " "|cut -d" " -f2`
}

start(){
    pid=$(mci_fhir_pid)
    if [ -n "$pid" ];
    then
        echo -e "\e[00;31mService mci-fhir is already running (pid: $pid)\e[00m"
    else
        # Start mci-fhir
        create_dirs
        echo -e "\e[00;32mStarting mci-fhir\e[00m"
        if [ `user_exists $MCI_USER` = "1" ] && [ "$CUR_USER" != "$MCI_USER" ] ;
        then
                /bin/su $MCI_USER -c $MCI_RUN
        else
                sh $MCI_RUN
        fi
  fi
  return 0
}
status(){
          pid=$(mci_fhir_pid)
          if [ -n "$pid" ]; then echo -e "\e[00;32mService mci-fhir is running with pid: $pid\e[00m"
          else echo -e "\e[00;31mService mci-fhir is not running\e[00m"
          fi
}

stop() {
	echo -e "\e[00;31mTerminating mci-fhir\e[00m"
	kill -9 $(mci_fhir_pid)
}
user_exists(){
        if id -u $1 >/dev/null 2>&1; then
        echo "1"
        else
                echo "0"
        fi
}

case $1 in
	start)
	  start
	;;
	stop)
	  stop
	;;
	restart)
	  stop
	  start
	;;
	status)
		status
	;;
	kill)
		stop
	;;
	*)

	;;
esac
exit 0